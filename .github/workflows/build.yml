name: CI
on:
  pull_request: {}
  push: { branches: [development] }
  
jobs:   
  CI:
    name: Test
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    steps:
  
      # Checkout repository (required to test local actions)
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
        
      - name: Activate license
        uses: MirrorNG/unity-runner@3.0.0
        with:
          entrypoint: /activate.sh
          
      - name: Generate Solution
        uses: MirrorNG/unity-runner@3.0.0
        with:
          # Arguments to pass to unity
          args: -buildTarget StandaloneWindows64 -customBuildName AoTTG2 -customBuildPath ./build/StandaloneWindows64 -projectPath . -executeMethod  UnityEditor.SyncVS.SyncSolution -quit
      
      # Upload artifacts
      - name: Archive test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Test results
          path: Tests
  
      - name: SonarQube analysis
        if: always()
        uses: MirrorNG/unity-runner@3.0.0
        with:
          entrypoint: /sonar-scanner.sh
          projectKey: AoTTG-2_AoTTG-2
          projectName: AoTTG-2
          sonarOrganisation: aottg-2
          beginArguments: /d:sonar.verbose="true"
        env:
          FrameworkPathOverride: /opt/Unity/Editor/Data/MonoBleedingEdge/
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

  Release:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
  
      - name: Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/git
          branch: development
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
